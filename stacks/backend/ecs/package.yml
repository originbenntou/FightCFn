AWSTemplateFormatVersion: '2010-09-09'
Description: "ECSCluster,Service,Task,LoadBalancer,SecurityGroup\n"
Parameters:
  ProductName:
    Type: String
  Env:
    Type: String
    AllowedValues:
    - dev
    - stg
    - prd
  ImageUrl:
    Type: String
    Default: 743530693495.dkr.ecr.ap-northeast-1.amazonaws.com/fight
  ContainerPort:
    Type: Number
    Default: 8080
  ContainerCpu:
    Type: Number
    Default: 256
  ContainerMemory:
    Type: Number
    Default: 512
  DesiredCount:
    Type: Number
    Default: 2
Resources:
  ECSCluster:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: https://s3.ap-northeast-1.amazonaws.com/cfn-template-myproduct-dev/backend-ecs/6ce104ba3848b842690f63ffff1fb021.template
      Parameters:
        ProductName:
          Ref: ProductName
        Env:
          Ref: Env
        Name:
          Fn::Sub: ${ProductName}-cluster-${Env}
  ECSTask:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: https://s3.ap-northeast-1.amazonaws.com/cfn-template-myproduct-dev/backend-ecs/2527d55d37eba938721538b88d372ade.template
      Parameters:
        ContainerCpu:
          Ref: ContainerCpu
        ContainerMemory:
          Ref: ContainerMemory
        ImageUrl:
          Ref: ImageUrl
        ContainerPort:
          Ref: ContainerPort
        ExecutionRoleArn:
          Ref: ECSTaskExecutionRole
        ProductName:
          Ref: ProductName
        Env:
          Ref: Env
        Name:
          Fn::Sub: ${ProductName}-taskdef-${Env}
  ECSService:
    Type: AWS::CloudFormation::Stack
    DependsOn:
    - ECSCluster
    - ECSTask
    Properties:
      TemplateURL: https://s3.ap-northeast-1.amazonaws.com/cfn-template-myproduct-dev/backend-ecs/d006f23750e5ead8dd8f1c65b52f76ec.template
      Parameters:
        ClusterArn:
          Fn::GetAtt:
          - ECSCluster
          - Outputs.ECSClusterArn
        DesiredCount:
          Ref: DesiredCount
        SecurityGroups:
          Fn::Join:
          - ','
          - - Fn::ImportValue: ECSContainerSecurityGroup
        Subnets:
          Fn::Join:
          - ','
          - - Fn::ImportValue: PrivateSubnetA
            - Fn::ImportValue: PrivateSubnetC
        TaskDefinitionArn:
          Fn::GetAtt:
          - ECSTask
          - Outputs.TaskDefinitionArn
        ContainerPort:
          Ref: ContainerPort
        TargetGroupArn:
          Fn::ImportValue: TargetGroupForECS
        ProductName:
          Ref: ProductName
        Env:
          Ref: Env
        Name:
          Fn::Sub: ${ProductName}-service-${Env}
  ECSRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - ecs.amazonaws.com
          Action:
          - sts:AssumeRole
      Path: /
      Policies:
      - PolicyName: ecs-service
        PolicyDocument:
          Statement:
          - Effect: Allow
            Action:
            - ec2:AttachNetworkInterface
            - ec2:CreateNetworkInterface
            - ec2:CreateNetworkInterfacePermission
            - ec2:DeleteNetworkInterface
            - ec2:DeleteNetworkInterfacePermission
            - ec2:Describe*
            - ec2:DetachNetworkInterface
            - elasticloadbalancing:DeregisterInstancesFromLoadBalancer
            - elasticloadbalancing:DeregisterTargets
            - elasticloadbalancing:Describe*
            - elasticloadbalancing:RegisterInstancesWithLoadBalancer
            - elasticloadbalancing:RegisterTargets
            Resource: '*'
  ECSTaskExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - ecs-tasks.amazonaws.com
          Action:
          - sts:AssumeRole
      Path: /
      Policies:
      - PolicyName: AmazonECSTaskExecutionRolePolicy
        PolicyDocument:
          Statement:
          - Effect: Allow
            Action:
            - ecr:GetAuthorizationToken
            - ecr:BatchCheckLayerAvailability
            - ecr:GetDownloadUrlForLayer
            - ecr:BatchGetImage
            - logs:CreateLogStream
            - logs:PutLogEvents
            Resource: '*'
