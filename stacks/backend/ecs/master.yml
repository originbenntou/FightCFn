AWSTemplateFormatVersion: '2010-09-09'
Description: >
  ECSCluster,Service,Task,LoadBalancer,SecurityGroup

Parameters:
  ProductName:
    Type: String
  Env:
    Type: String
    AllowedValues:
      - dev
      - stg
      - prd

  #########################################
  # Parameters For ECS
  #########################################
  ImageUrl:
    Type: String
    Default: '743530693495.dkr.ecr.ap-northeast-1.amazonaws.com/fight'
  ContainerPort:
    Type: Number
    Default: 8080
  ContainerCpu:
    Type: Number
    Default: 256
  ContainerMemory:
    Type: Number
    Default: 512
  DesiredCount:
    Type: Number
    Default: 2

Resources:
  #########################################
  # ECS Cluster
  #########################################
  ECSCluster:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: '../../../templates/ecs/cluster.yml'
      Parameters:
        ProductName: !Ref ProductName
        Env: !Ref Env
        Name: !Sub ${ProductName}-cluster-${Env}

  #########################################
  # ECS Task
  #########################################
  ECSTask:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: '../../../templates/ecs/task.yml'
      Parameters:
        ContainerCpu: !Ref ContainerCpu
        ContainerMemory: !Ref ContainerMemory
        ImageUrl: !Ref ImageUrl
        ContainerPort: !Ref ContainerPort
        ExecutionRoleArn: !Ref ECSTaskExecutionRole
        TaskRoleArn: !Ref ECSTaskRole
        DBSecret: !ImportValue RDBSecrets
        ProductName: !Ref ProductName
        Env: !Ref Env
        Name: !Sub ${ProductName}-taskdef-${Env}

  #########################################
  # ECS Service
  #########################################
  ECSService:
    Type: AWS::CloudFormation::Stack
    DependsOn:
      - ECSCluster
      - ECSTask
    Properties:
      TemplateURL: '../../../templates/ecs/service.yml'
      Parameters:
        ClusterArn: !GetAtt ECSCluster.Outputs.ECSClusterArn
        DesiredCount: !Ref DesiredCount
        SecurityGroups: !Join [ ',', [!ImportValue ECSContainerSecurityGroup] ]
        Subnets: !Join [ ',', [!ImportValue PrivateSubnetA, !ImportValue PrivateSubnetC] ]
        TaskDefinitionArn: !GetAtt ECSTask.Outputs.TaskDefinitionArn
        ContainerPort: !Ref ContainerPort
        TargetGroupArn: !ImportValue TargetGroupForECS
        ProductName: !Ref ProductName
        Env: !Ref Env
        Name: !Sub ${ProductName}-service-${Env}

  #########################################
  # IAM
  #########################################
  ECSTaskExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service: [ecs-tasks.amazonaws.com]
            Action: ['sts:AssumeRole']
      Path: /
      Policies:
        - PolicyName: AmazonECSTaskExecutionRolePolicy
          PolicyDocument:
            Statement:
              - Effect: Allow
                Action:
                  # Allow the ECS Tasks to download images from ECR
                  - 'ecr:GetAuthorizationToken'
                  - 'ecr:BatchCheckLayerAvailability'
                  - 'ecr:GetDownloadUrlForLayer'
                  - 'ecr:BatchGetImage'
                  # Allow the ECS task to get secrets
                  - 'secretsmanager:GetSecretValue'
                  # Allow the ECS tasks to upload logs to CloudWatch
                  - 'logs:CreateLogStream'
                  - 'logs:PutLogEvents'
                Resource: '*'
  ECSTaskRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service: [ecs-tasks.amazonaws.com]
            Action: ['sts:AssumeRole']
      Path: /
      Policies:
        - PolicyName: AmazonECSTaskRolePolicy
          PolicyDocument:
            Statement:
              - Effect: Allow
                Action:
                  - 'ssmmessages:CreateControlChannel'
                  - 'ssmmessages:CreateDataChannel'
                  - 'ssmmessages:OpenControlChannel'
                  - 'ssmmessages:OpenDataChannel'
                Resource: '*'
