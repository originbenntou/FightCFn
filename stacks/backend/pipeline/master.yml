AWSTemplateFormatVersion: '2010-09-09'
Description: >
  ECSCluster,Service,Task,LoadBalancer,SecurityGroup

Parameters:
  ProductName:
    Type: String
  Env:
    Type: String
    AllowedValues:
      - dev
      - stg
      - prd

  ImageRepoName:
    Type: String
    Default: '743530693495.dkr.ecr.ap-northeast-1.amazonaws.com/fight'

Resources:
  #########################################
  # Artifact Bucket For Pipeline
  #########################################
  PipelineArtifactBucket:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: '../../../templates/s3/bucket.yml'
      Parameters:
        BucketName: !Sub pipeline-artifact-${Env}
        ExpirationInDays: 30
        ProductName: !Ref ProductName
        Env: !Ref Env

  #########################################
  # CodeBuild
  #########################################
  CodeBuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Tags:
        - Key: 'ProductName'
          Value: !Ref ProductName
        - Key: 'Env'
          Value: !Ref Env
      Name: !Sub codebuild-${Env}
      ServiceRole: !Ref CodeBuildServiceRole
      Artifacts:
        Type: CODEPIPELINE
      Source:
        Type: CODEPIPELINE
        # BuildSpec: "fight/buildspec.yml"
      Environment:
        PrivilegedMode: true
        ComputeType: BUILD_GENERAL1_SMALL
        Image: "aws/codebuild/amazonlinux2-x86_64-standard:3.0"
        Type: LINUX_CONTAINER
        EnvironmentVariables:
          - Type: PLAINTEXT
            Name: AWS_ACCOUNT_ID
            Value: !Ref AWS::AccountId
          - Type: PLAINTEXT
            Name: IMAGE_REPO_NAME
            Value: !Ref ImageRepoName
      TimeoutInMinutes: 5
      QueuedTimeoutInMinutes: 5
      # LogsConfig: ...

  #########################################
  # CodePipeline
  #########################################
  Pipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      RoleArn: !GetAtt CodePipelineServiceRole.Arn
      ArtifactStore:
        Type: S3
        Location: !Ref PipelineArtifactBucket
      Stages:
        - Name: Source
          Actions:
            - Name: SourceAction
              ActionTypeId:
                Category: Source
                Owner: AWS
                Version: 1
                Provider: CodeCommit
              Configuration:
                RepositoryName: !GetAtt [CodeCommitRepository, Name]
                BranchName: main
              RunOrder: 1
              OutputArtifacts:
                - Name: SourceArtifact
        - Name: Build
          Actions:
            - Name: Build
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: 1
                Provider: CodeBuild
              Configuration:
                ProjectName: !Ref CodeBuildProject
              RunOrder: 1
              InputArtifacts:
                - Name: SourceArtifact
              OutputArtifacts:
                - Name: BuildArtifact

  #########################################
  # IAM
  #########################################
  CodeBuildServiceRole:
    Type: AWS::IAM::Role
    Properties:
      Path: '/'
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: codebuild.amazonaws.com
            Action: 'sts:AssumeRole'
      Policies:
        - PolicyName: CodeBuildServiceRolePolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Resource: '*'
                Effect: Allow
                Action:
                  - 'logs:CreateLogGroup'
                  - 'logs:CreateLogStream'
                  - 'logs:PutLogEvents'
              - Resource: '*'
                Effect: Allow
                Action:
                  - 'ecr:GetAuthorizationToken'
                  - 'ecr:BatchCheckLayerAvailability'
                  - 'ecr:GetDownloadUrlForLayer'
                  - 'ecr:GetRepositoryPolicy'
                  - 'ecr:DescribeRepositories'
                  - 'ecr:ListImages'
                  - 'ecr:DescribeImages'
                  - 'ecr:BatchGetImage'
                  - 'ecr:InitiateLayerUpload'
                  - 'ecr:UploadLayerPart'
                  - 'ecr:CompleteLayerUpload'
                  - 'ecr:PutImage'
              - Resource: !Sub 'arn:aws:s3:::${ArtifactBucket}/*'
                Effect: Allow
                Action:
                  - 's3:GetObject'
                  - 's3:PutObject'
                  - 's3:GetObjectVersion'
  CodePipelineServiceRole:
    Type: AWS::IAM::Role
    Properties:
      Path: '/'
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: codepipeline.amazonaws.com
            Action: 'sts:AssumeRole'
      Policies:
        - PolicyName: CodePipelineServiceRolePolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Resource:
                  - !Sub 'arn:aws:s3:::${ArtifactBucket}/*'
                Effect: Allow
                Action:
                  - 's3:PutObject'
                  - 's3:GetObject'
                  - 's3:GetObjectVersion'
                  - 's3:GetBucketVersioning'
              - Resource: '*'
                Effect: Allow
                Action:
                  - 'codebuild:StartBuild'
                  - 'codebuild:StopBuild'
                  - 'codebuild:BatchGet*'
                  - 'codebuild:Get*'
                  - 'codebuild:List*'
                  - 'codecommit:GetBranch'
                  - 'codecommit:GetCommit'
                  - 'codecommit:GetRepository'
                  - 'codecommit:ListBranches'
                  - 'codecommit:GetUploadArchiveStatus'
                  - 'codecommit:UploadArchive'
                  - 'codecommit:CancelUploadArchive'
                  - 'codedeploy:CreateDeployment'
                  - 'codedeploy:GetApplicationRevision'
                  - 'codedeploy:GetDeployment'
                  - 'codedeploy:GetDeploymentConfig'
                  - 'codedeploy:RegisterApplicationRevision'
                  - 's3:GetBucketLocation'
                  - 's3:ListAllMyBuckets'
                  - 'iam:PassRole'
              - Resource: 'arn:aws:ssm:*:*:parameter/CodeBuild/*'
                Effect: Allow
                Action:
                  - 'ssm:PutParameter'
  CodeDeployServiceRole:
    Type: AWS::IAM::Role
    Properties:
      Path: '/'
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: codedeploy.amazonaws.com
            Action: 'sts:AssumeRole'
      ManagedPolicyArns:
        - 'arn:aws:iam::aws:policy/service-role/AWSCodeDeployRole'
