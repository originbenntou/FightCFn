AWSTemplateFormatVersion: 2010-09-09
Description: >
  codepipeline!

#Parameters:
#  AccountID:
#    Type: String
#    Default: "743530693495"

Resources:
  # FIXME: 分離すべき
  CodeCommitRepository:
    Type: AWS::CodeCommit::Repository
    Properties:
      Tags:
        - Key: ProjectName
          Value: fight
      RepositoryName: fight
      RepositoryDescription: fight-repository
      Code:
        BranchName: main
        S3:
          Bucket: fight-codecommit-dev
          Key: fight.zip

  # FIXME: 分離すべき
  ECRRepository:
    Type: AWS::ECR::Repository
    Properties:
      Tags:
        - Key: ProjectName
          Value: fight
      RepositoryName: fight
      ImageTagMutability: IMMUTABLE
      RepositoryPolicyText:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              AWS:
                - !Join ["", ["arn:aws:iam::", !Ref AWS::AccountId, ":root"]]
            Action:
              - ecr:BatchGetImage
              - ecr:PutImage
              - ecr:GetDownloadUrlForLayer
              - ecr:BatchCheckLayerAvailability
              - ecr:InitiateLayerUpload
              - ecr:UploadLayerPart
              - ecr:CompleteLayerUpload
              - ecr:GetAuthorizationToken

  #####################################
  # Artifact Bucket for CodePipeline
  #####################################
  ArtifactBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: fight-artifact-bucket
      Tags:
        - Key: ProjectName
          Value: fight

  #####################################
  # IAM Role for CodeBuild,CodePipeline,CodeDeploy
  #####################################
  CodeBuildServiceRole:
    Type: AWS::IAM::Role
    Properties:
      Path: /
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: codebuild.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: CodeBuildServiceRolePolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Resource: "*"
                Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
              - Resource: "*"
                Effect: Allow
                Action:
                  - ecr:GetAuthorizationToken
                  - ecr:BatchCheckLayerAvailability
                  - ecr:GetDownloadUrlForLayer
                  - ecr:GetRepositoryPolicy
                  - ecr:DescribeRepositories
                  - ecr:ListImages
                  - ecr:DescribeImages
                  - ecr:BatchGetImage
                  - ecr:InitiateLayerUpload
                  - ecr:UploadLayerPart
                  - ecr:CompleteLayerUpload
                  - ecr:PutImage
              - Resource: !Sub arn:aws:s3:::${ArtifactBucket}/*
                Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:PutObject
                  - s3:GetObjectVersion
  CodePipelineServiceRole:
    Type: AWS::IAM::Role
    Properties:
      Path: /
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: codepipeline.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: CodePipelineServiceRolePolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Resource:
                  - !Sub arn:aws:s3:::${ArtifactBucket}/*
                Effect: Allow
                Action:
                  - s3:PutObject
                  - s3:GetObject
                  - s3:GetObjectVersion
                  - s3:GetBucketVersioning
              - Resource: "*"
                Effect: Allow
                Action:
                  - codebuild:StartBuild
                  - codebuild:StopBuild
                  - codebuild:BatchGet*
                  - codebuild:Get*
                  - codebuild:List*
                  - codecommit:GetBranch
                  - codecommit:GetCommit
                  - codecommit:GetRepository
                  - codecommit:ListBranches
                  - codecommit:GetUploadArchiveStatus
                  - codecommit:UploadArchive
                  - codecommit:CancelUploadArchive
                  - codedeploy:CreateDeployment
                  - codedeploy:GetApplicationRevision
                  - codedeploy:GetDeployment
                  - codedeploy:GetDeploymentConfig
                  - codedeploy:RegisterApplicationRevision
                  - s3:GetBucketLocation
                  - s3:ListAllMyBuckets
                  - iam:PassRole
              - Resource: "arn:aws:ssm:*:*:parameter/CodeBuild/*"
                Effect: Allow
                Action:
                  - ssm:PutParameter
  CodeDeployServiceRole:
    Type: AWS::IAM::Role
    Properties:
      Path: /
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: codedeploy.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/service-role/AWSCodeDeployRole"

  CodeBuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Tags:
        - Key: ProjectName
          Value: fight
      Name: fight-codebuild-project
      ServiceRole: !Ref CodeBuildServiceRole
      Artifacts:
        Type: CODEPIPELINE
      Source:
        Type: CODEPIPELINE
        # BuildSpec: "fight/buildspec.yml"
      Environment:
        PrivilegedMode: true
        ComputeType: BUILD_GENERAL1_SMALL
        Image: "aws/codebuild/amazonlinux2-x86_64-standard:3.0"
        Type: LINUX_CONTAINER
        EnvironmentVariables:
          - Type: PLAINTEXT
            Name: AWS_ACCOUNT_ID
            Value: !Ref AWS::AccountId
          - Type: PLAINTEXT
            Name: IMAGE_REPO_NAME
            Value: !Sub "${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com/fight"
      TimeoutInMinutes: 5
      QueuedTimeoutInMinutes: 5
      # LogsConfig: ...

#  CodeDeployAplication:
#    Type: AWS::CodeDeploy::Application
#    Properties:
#      ApplicationName: "build-test-app"
#
#  CodeDeployGroup:
#    Type: AWS::CodeDeploy::DeploymentGroup
#    Properties:
#      ApplicationName: !Ref CodeDeployAplication
#      DeploymentGroupName: "build-test-group"
#      DeploymentConfigName: CodeDeployDefault.OneAtATime
#      Ec2TagFilters:
#        - Type: KEY_AND_VALUE
#          Key: "Name"
#          Value: "docker-ue1"
#      ServiceRoleArn: !GetAtt [CodeDeployServiceRole, Arn]
#

  Pipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      RoleArn: !GetAtt CodePipelineServiceRole.Arn
      ArtifactStore:
        Type: S3
        Location: !Ref ArtifactBucket
      Stages:
        - Name: Source
          Actions:
            - Name: SourceAction
              ActionTypeId:
                Category: Source
                Owner: AWS
                Version: 1
                Provider: CodeCommit
              Configuration:
                RepositoryName: !GetAtt [CodeCommitRepository, Name]
                BranchName: main
              RunOrder: 1
              OutputArtifacts:
                - Name: App
        - Name: Build
          Actions:
            - Name: Build
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: 1
                Provider: CodeBuild
              Configuration:
                ProjectName: !Ref CodeBuildProject
              RunOrder: 1
              InputArtifacts:
                - Name: App
              OutputArtifacts:
                - Name: MyApp
#        - Name: Deploy
#          Actions:
#            - Name: Deploy
#              ActionTypeId:
#                Category: Deploy
#                Owner: AWS
#                Version: 1
#                Provider: CodeDeploy
#              Configuration:
#                ApplicationName: !Ref CodeDeployAplication
#                DeploymentGroupName: !Ref CodeDeployGroup
#              RunOrder: 1
#              InputArtifacts:
#                - Name: MyApp
